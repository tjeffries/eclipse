/* Author: Thomas Jeffries
 * Tree node containing Line object
 * */
public class TNode {
	
	public Line line;
	public TNode leftChild;
	public TNode rightChild;
	private static final int CCW = 0;
	private static final int CL = 1;
	private static final int CW = 2;
	
	public void insert(Line x){
		if(line.slope() < 0){
			if(line.rel(x.x1, x.y1) == CCW && line.rel(x.x2, x.y2) == CCW){
				goLeft(x);
			}
			if(line.rel(x.x1, x.y1) == CW && line.rel(x.x2, x.y2) == CW){
				goRight(x);
			}
		} else {
			if(line.rel(x.x1, x.y1) == CCW && line.rel(x.x2, x.y2) == CCW){
				goRight(x);
			}
			if(line.rel(x.x1, x.y1) == CW && line.rel(x.x2, x.y2) == CW){
				goLeft(x);
			}
		}
	}
	
	//goLeft/goRight calls insert on that child or adds if nonexistant
	public void goLeft(Line l){
		if(leftChild == null){
			leftChild = new TNode();
			leftChild.line = l;
			return;
		}
		
	}
	
	public void goRight(Line l){
		
	}
}
